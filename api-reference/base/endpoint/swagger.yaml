{
  "openapi": "3.0.0",
  "paths": {
    "/base/healthCheck": {
      "get": {
        "operationId": "RouterController_healthCheck",
        "summary": "Ping the router to see if it's alive or just pretending to work",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "route"
        ]
      }
    },
    "/base/route": {
      "get": {
        "operationId": "RouterController_route",
        "summary": "Find the magical money path through the DeFi jungle of Fibrous Finance",
        "description": "Find the optimal trading route through Fibrous Finance's liquidity pools to maximize output and minimize slippage. This endpoint analyzes multiple protocols, pool depths, and potential paths to deliver the most efficient swap execution for your tokens.",
        "parameters": [
          {
            "name": "amount",
            "required": true,
            "in": "query",
            "example": "0xde0b6b3a7640000 || 1000000000000000000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenInAddress",
            "required": true,
            "in": "query",
            "example": "0x5300000000000000000000000000000000000004",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenOutAddress",
            "required": true,
            "in": "query",
            "example": "0x06efdbff2a14a7c8e15944d1f4a48f9f95f663a4",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reverse",
            "required": false,
            "in": "query",
            "description": "its not supported yet",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "direct",
            "required": false,
            "in": "query",
            "description": "if its true direct route",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "excludeProtocols",
            "required": false,
            "in": "query",
            "description": "The protocol IDs you want to exclude from liquidity sources separated by commas",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "route api response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RouteResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "route"
        ]
      }
    },
    "/base/execute": {
      "get": {
        "operationId": "RouterController_execute",
        "summary": "Generate calldata for the Fibrous Finance router contract for swap",
        "description": "Like a financial GPS on steroids - finds the magical money path through DeFi jungle, squeezes every penny out of your swap, and hands you the secret incantation (calldata) to summon the Fibrous Router contract. No wizardry degree required!\n     **TLDR: Find the best route and return the calldata to execute the swap**",
        "parameters": [
          {
            "name": "amount",
            "required": true,
            "in": "query",
            "example": "0xde0b6b3a7640000 || 1000000000000000000",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenInAddress",
            "required": true,
            "in": "query",
            "example": "0x5300000000000000000000000000000000000004",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tokenOutAddress",
            "required": true,
            "in": "query",
            "example": "0xf55bec9cafdbe8730f096aa55dad6d22d44099df",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "slippage",
            "required": true,
            "in": "query",
            "example": "0.5",
            "description": "slippage: Min. 0; max:49 (0.49)",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "destination",
            "required": true,
            "in": "query",
            "description": "The receiver address for the output token",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reverse",
            "required": false,
            "in": "query",
            "description": "its not supported yet",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "direct",
            "required": false,
            "in": "query",
            "description": "its not supported yet",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "name": "excludeProtocols",
            "required": false,
            "in": "query",
            "description": "The protocol IDs you want to exclude from liquidity sources separated by commas",
            "schema": {
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "route"
        ]
      }
    },
    "/base/calldata": {
      "post": {
        "operationId": "RouterController_calldata",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/callDataDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "route"
        ]
      }
    }
  },
  "info": {
    "title": "Fibrous Smart Order Rotuer",
    "description": "Fibrous Smart Order Rotuer",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "fibrous",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "RouteDto": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "0xde0b6b3a7640000 || 1000000000000000000"
          },
          "tokenInAddress": {
            "type": "string",
            "example": "0x5300000000000000000000000000000000000004"
          },
          "tokenOutAddress": {
            "type": "string",
            "example": "0x06efdbff2a14a7c8e15944d1f4a48f9f95f663a4"
          },
          "reverse": {
            "type": "boolean",
            "default": false,
            "description": "its not supported yet"
          },
          "direct": {
            "type": "boolean",
            "default": false,
            "description": "if its true direct route"
          },
          "excludeProtocols": {
            "type": "array",
            "description": "The protocol IDs you want to exclude from liquidity sources separated by commas",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "amount",
          "tokenInAddress",
          "tokenOutAddress"
        ]
      },
      "RouteResponseDto": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "inputToken": {
            "type": "object"
          },
          "inputAmount": {
            "type": "string"
          },
          "outputToken": {
            "type": "object"
          },
          "outputAmount": {
            "type": "string"
          },
          "estimatedGasUsed": {
            "type": "string"
          },
          "route": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "time": {
            "type": "number"
          },
          "bestQuotesByProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "success",
          "inputToken",
          "inputAmount",
          "outputToken",
          "outputAmount",
          "estimatedGasUsed",
          "route",
          "time",
          "bestQuotesByProtocols"
        ]
      },
      "callDataDto": {
        "type": "object",
        "properties": {
          "route_response": {
            "type": "object"
          },
          "slippage": {
            "type": "number"
          },
          "signer": {
            "type": "string"
          }
        },
        "required": [
          "route_response",
          "slippage",
          "signer"
        ]
      }
    }
  }
}